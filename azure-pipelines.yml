trigger:
- master
#comment
resources:
- repo: self

variables:
  imageRepo: myimg
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool: mypool
    steps:
    - task: Docker@2
      displayName: Build and Push
      inputs:
        containerRegistry: 'containerRegistryNew'
        repository: '$(imagerepo)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'

- stage: deploy
  displayName: Deploy image
  dependsOn: Build
  variables:
    acrsecret: kubernetesinv
  jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: 'kubernetesinv.default'
      pool: mypool
      strategy:
       runOnce:
         deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'manifests'
              targetPath: '$(Pipeline.Workspace)/manifests'
          - task: KubernetesManifest@0
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'kubernetesServicenewnews'
              namespace: 'default'
              secretType: 'dockerRegistry'
              secretName: '$(acrsecret)'
              dockerRegistryEndpoint: 'containerRegistryNew'
          - task: KubernetesManifest@0
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'kubernetesServicenewnews'
              namespace: 'default'
              manifests: |
               $(Pipeline.Workspace)/manifests/deployment.yml
               $(Pipeline.Workspace)/manifests/service.yml
               $(Pipeline.Workspace)/manifests/ingress.yml
               $(Pipeline.Workspace)/manifests/configmap.yml
               $(Pipeline.Workspace)/manifests/secret.yml
              imagePullSecrets: '$(acrsecret)'
              containers: '$(containerRegistry)/$(imageRepository):$(tag)'